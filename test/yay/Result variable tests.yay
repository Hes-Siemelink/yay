Test case: Expected result

Test: a result

Expected result: a result


---
Test case: Set variable

Set variable:
  result: something

Assert equals:
- actual: ${result}
  expected: something


---
Test case: Set variable with 'Set'

Test: a different result
Set: var

Assert equals:
- actual: ${var}
  expected: a different result


---
Test case: Set variable with 'Result'

Test: some contents
Result: var2

Assert equals:
- actual: ${var2}
  expected: some contents


---
Test case: Set variable with 'As'

Test: some more contents
As: var3

Assert equals:
- actual: ${var3}
  expected: some more contents


---
Test case: Result assignment

${var}: something
${result}: ${var}

Expected result: something


---
Test case: Result from for each

Set variable:
  result: something

For each:
  item:
  - one
  - two
  - three
  Do:
  - ${result}: ${result} ${item}

Expected result: something one two three


---
Test case: Make sure variables are resolved at right time in Do task

${result}: something else
${test}: []

For each:
  recipe:
    - Mango ice cream
    - Ratatouille
    - Meatballs
  Do:
    ${result}: ${recipe}
    Join:
      test:
      - ${result}

Assert equals:
- actual: ${test}
  expected:
    - Mango ice cream
    - Ratatouille
    - Meatballs


---
Test case: variable in For each

${items}:
  - One
  - Two
  - Three
${test_result}: []

For each:
  item: ${items}
  Do:
    Join:
      test_result:
      - (${item})

Assert equals:
  - actual: ${test_result}
    expected:
      - (One)
      - (Two)
      - (Three)
